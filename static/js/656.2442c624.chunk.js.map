{"version":3,"file":"static/js/656.2442c624.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import { Field, Formik } from 'formik';\nimport {\n  Button,\n  CheckBox,\n  CheckboxLabel,\n  CheckboxText,\n  CheckboxWrap,\n  FormWrap,\n  IconPin,\n  InputWrap,\n  LacationLabel,\n  StyledInput,\n} from './Filter.styled';\n\nimport sprite from '../../helpers/icons/icons.svg';\n\nexport const Filter = () => {\n  const handleSubmit = event => {\n    console.log(event);\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          location: '',\n        }}\n        onSubmit={handleSubmit}\n      >\n        <FormWrap>\n          <InputWrap>\n            <LacationLabel htmlFor=\"location\">Location</LacationLabel>\n            <StyledInput\n              id=\"location\"\n              name=\"location\"\n              placeholder=\"City\"\n              style={{ width: 'unset' }}\n            />\n            <IconPin width={18} height={20}>\n              <use href={`${sprite}#icon-map-pin`}></use>\n            </IconPin>\n          </InputWrap>\n\n          <p\n            style={{\n              color: '#475467',\n              fontWeight: '500',\n              marginBottom: '14px',\n            }}\n          >\n            Filters\n          </p>\n\n          <CheckboxWrap>\n            <CheckboxText id=\"checkbox-group\">Vehicle equipment</CheckboxText>\n            <CheckBox role=\"group\" aria-labelledby=\"checkbox-group\">\n              <CheckboxLabel>\n                <Field type=\"checkbox\" name=\"checked\" value=\"AC\" />\n                <svg\n                  width={32}\n                  height={32}\n                  style={{\n                    paddingLeft: '12px',\n                  }}\n                >\n                  <use href={`${sprite}#icon-ac`}></use>\n                </svg>\n                <p>AC</p>\n              </CheckboxLabel>\n\n              <CheckboxLabel>\n                <Field type=\"checkbox\" name=\"checked\" value=\"Automatic\" />\n                <svg\n                  width={32}\n                  height={32}\n                  style={{\n                    marginBottom: '8px',\n                  }}\n                >\n                  <use href={`${sprite}#icon-man`}></use>\n                </svg>\n                <p>Automatic</p>\n              </CheckboxLabel>\n\n              <CheckboxLabel>\n                <Field type=\"checkbox\" name=\"checked\" value=\"Kitchen\" />\n                <svg\n                  width={32}\n                  height={32}\n                  style={{ stroke: 'currentcolor', marginBottom: '8px' }}\n                >\n                  <use href={`${sprite}#icon-kitchen`}></use>\n                </svg>\n                <p>Kitchen</p>\n              </CheckboxLabel>\n\n              <CheckboxLabel>\n                <Field type=\"checkbox\" name=\"checked\" value=\"TV\" />\n                <svg\n                  width={32}\n                  height={32}\n                  style={{ stroke: 'currentcolor', marginBottom: '8px' }}\n                >\n                  <use href={`${sprite}#icon-tv`}></use>\n                </svg>\n                <p>TV</p>\n              </CheckboxLabel>\n\n              <CheckboxLabel>\n                <Field type=\"checkbox\" name=\"checked\" value=\"Shower/WC\" />\n                <svg\n                  width={32}\n                  height={32}\n                  style={{ stroke: 'currentcolor', marginBottom: '8px' }}\n                >\n                  <use href={`${sprite}#icon-shower`}></use>\n                </svg>\n                <p>Shower/WC</p>\n              </CheckboxLabel>\n            </CheckBox>\n          </CheckboxWrap>\n\n          <CheckboxWrap>\n            <CheckboxText id=\"my-radio-group\">Vehicle type</CheckboxText>\n            <CheckBox role=\"group\" aria-labelledby=\"my-radio-group\">\n              <CheckboxLabel>\n                <Field type=\"radio\" name=\"picked\" value=\"Van\" />\n                <svg\n                  width={40}\n                  height={28}\n                  style={{\n                    stroke: 'currentcolor',\n                    fill: 'currentcolor',\n                    marginBottom: '8px',\n                  }}\n                >\n                  <use href={`${sprite}#icon-van`}></use>\n                </svg>\n                <p>Van</p>\n              </CheckboxLabel>\n              <CheckboxLabel>\n                <Field type=\"radio\" name=\"picked\" value=\"Fully Integrated\" />\n                <svg\n                  width={40}\n                  height={28}\n                  style={{\n                    stroke: 'currentcolor',\n                    fill: 'currentcolor',\n                    marginBottom: '8px',\n                  }}\n                >\n                  <use href={`${sprite}#icon-fulle`}></use>\n                </svg>\n                <p style={{ textAlign: 'center' }}>Fully Integrated</p>\n              </CheckboxLabel>\n              <CheckboxLabel>\n                <Field type=\"radio\" name=\"picked\" value=\"Alcove\" />\n                <svg\n                  width={40}\n                  height={28}\n                  style={{\n                    stroke: 'currentcolor',\n                    fill: 'currentcolor',\n                    marginBottom: '8px',\n                  }}\n                >\n                  <use href={`${sprite}#icon-alcove`}></use>\n                </svg>\n                <p>Alcove</p>\n              </CheckboxLabel>\n            </CheckBox>\n          </CheckboxWrap>\n\n          <Button type=\"submit\">Search</Button>\n        </FormWrap>\n      </Formik>\n    </>\n  );\n};\n","import { Container } from 'components/App/App.styled';\nimport {\n  CatalogItem,\n  CatalogList,\n  CatalogWrap,\n  LoadMoreBtn,\n} from './CatalogPage.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Campers } from 'components/Campers/Campers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getCampers } from '../redux/campers/operations';\nimport { selectCampers, selectTotal } from '../redux/campers/selectors';\n\nconst CatalogPage = () => {\n  const [page, setPage] = useState(1);\n  const [showLoadMore, setShowLoadMore] = useState(true);\n\n  const campers = useSelector(selectCampers);\n  const total = useSelector(selectTotal);\n  const limit = 4;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setShowLoadMore(true);\n\n    setShowLoadMore(page < Math.ceil(total / limit));\n\n    dispatch(getCampers({ page, limit }));\n  }, [dispatch, page, total]);\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <Container>\n      <CatalogWrap>\n        <Filter />\n\n        <div>\n          <CatalogList>\n            {campers.map(camper => (\n              <CatalogItem key={camper._id}>\n                <Campers camper={camper} />\n              </CatalogItem>\n            ))}\n          </CatalogList>\n\n          {showLoadMore && campers.length > 0 && (\n            <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n              Load More\n            </LoadMoreBtn>\n          )}\n        </div>\n      </CatalogWrap>\n    </Container>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["Filter","_jsx","_Fragment","children","Formik","initialValues","location","onSubmit","event","console","log","_jsxs","FormWrap","InputWrap","LacationLabel","htmlFor","StyledInput","id","name","placeholder","style","width","IconPin","height","href","concat","sprite","color","fontWeight","marginBottom","CheckboxWrap","CheckboxText","CheckBox","role","CheckboxLabel","Field","type","value","paddingLeft","stroke","fill","textAlign","Button","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","showLoadMore","setShowLoadMore","campers","useSelector","selectCampers","total","selectTotal","dispatch","useDispatch","useEffect","Math","ceil","getCampers","limit","Container","CatalogWrap","CatalogList","map","camper","CatalogItem","Campers","_id","length","LoadMoreBtn","onClick","prev"],"sourceRoot":""}